{"ast":null,"code":"var _jsxFileName = \"/Users/mcrawford/Code/react-with-graphql-vanilla/src/App.js\";\nimport React, { Component } from 'react';\nimport { getIssuesOfRepository, resolveIssuesQuery } from './Functions/repositoryIssues';\nimport { addStarToRepository, resolveAddStarMutation, removeStarFromRepository, resolveRemoveStarMutation } from './Functions/gitStartHandlers';\nconst TITLE = 'React GraphQL GitHub Client';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      path: 'the-road-to-learn-react/the-road-to-learn-react',\n      organization: null,\n      errors: null\n    };\n\n    this.onChange = event => {\n      this.setState({\n        path: event.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      this.onFetchFromGitHub(this.state.path);\n      event.preventDefault();\n    };\n\n    this.onFetchFromGitHub = (path, cursor) => {\n      getIssuesOfRepository(path, cursor).then(queryResult => this.setState(resolveIssuesQuery(queryResult, cursor)));\n    };\n\n    this.onFetchMoreIssues = () => {\n      const endCursor = this.state.organization.repository.issues.pageInfo.endCursor;\n      this.onFetchFromGitHub(this.state.path, endCursor);\n    };\n\n    this.onStarRepository = (repositoryId, viewerHasStarred) => {\n      if (viewerHasStarred) {\n        removeStarFromRepository(repositoryId).then(mutationResult => this.setState(resolveRemoveStarMutation(mutationResult)));\n      } else {\n        addStarToRepository(repositoryId).then(mutationResult => this.setState(resolveAddStarMutation(mutationResult)));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.onFetchFromGitHub(this.state.path);\n  }\n\n  render() {\n    const _this$state = this.state,\n          path = _this$state.path,\n          organization = _this$state.organization,\n          errors = _this$state.errors;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, TITLE), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Show open issues for https://github.com/\"), React.createElement(\"input\", {\n      id: \"url\",\n      type: \"text\",\n      value: path,\n      onChange: this.onChange,\n      style: {\n        width: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), organization ? React.createElement(Organization, {\n      organization: organization,\n      errors: errors,\n      onFetchMoreIssues: this.onFetchMoreIssues,\n      onStarRepository: this.onStarRepository,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"No information yet ...\"));\n  }\n\n}\n\nconst Organization = ({\n  organization,\n  errors,\n  onFetchMoreIssues,\n  onStarRepository\n}) => {\n  if (errors) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Something went wrong:\"), errors.map(error => error.message).join(' '));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Issues from Organization:\"), React.createElement(\"a\", {\n    href: organization.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, organization.name)), React.createElement(Repository, {\n    repository: organization.repository,\n    onFetchMoreIssues: onFetchMoreIssues,\n    onStarRepository: onStarRepository,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n};\n\nconst Repository = ({\n  repository,\n  onFetchMoreIssues,\n  onStarRepository\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134\n  },\n  __self: this\n}, \"In Repository:\"), React.createElement(\"a\", {\n  href: repository.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135\n  },\n  __self: this\n}, repository.name)), React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => onStarRepository(repository.id, repository.viewerHasStarred),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138\n  },\n  __self: this\n}, repository.stargazers.totalCount, repository.viewerHasStarred ? ' Unstar' : ' Star'), React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 148\n  },\n  __self: this\n}, repository.issues.edges.map(issue => React.createElement(\"li\", {\n  key: issue.node.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: issue.node.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}, issue.node.title), React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153\n  },\n  __self: this\n}, issue.node.reactions.edges.map(reaction => React.createElement(\"li\", {\n  key: reaction.node.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n}, reaction.node.content)))))), React.createElement(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 162\n  },\n  __self: this\n}), repository.issues.pageInfo.hasNextPage && React.createElement(\"button\", {\n  onClick: onFetchMoreIssues,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 165\n  },\n  __self: this\n}, \"More\"));\n\nexport default App;","map":{"version":3,"sources":["/Users/mcrawford/Code/react-with-graphql-vanilla/src/App.js"],"names":["React","Component","getIssuesOfRepository","resolveIssuesQuery","addStarToRepository","resolveAddStarMutation","removeStarFromRepository","resolveRemoveStarMutation","TITLE","App","state","path","organization","errors","onChange","event","setState","target","value","onSubmit","onFetchFromGitHub","preventDefault","cursor","then","queryResult","onFetchMoreIssues","endCursor","repository","issues","pageInfo","onStarRepository","repositoryId","viewerHasStarred","mutationResult","componentDidMount","render","width","Organization","map","error","message","join","url","name","Repository","id","stargazers","totalCount","edges","issue","node","title","reactions","reaction","content","hasNextPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { getIssuesOfRepository, resolveIssuesQuery } from './Functions/repositoryIssues';\nimport { \n  addStarToRepository, \n  resolveAddStarMutation, \n  removeStarFromRepository, \n  resolveRemoveStarMutation,\n} from './Functions/gitStartHandlers';\n\nconst TITLE = 'React GraphQL GitHub Client';\n\nclass App extends Component {\n  state = {\n    path: 'the-road-to-learn-react/the-road-to-learn-react',\n    organization: null,\n    errors: null,\n  };\n\n  componentDidMount() {\n    this.onFetchFromGitHub(this.state.path);\n  }\n\n  onChange = event => {\n    this.setState({ path: event.target.value });\n  };\n\n  onSubmit = event => {\n    this.onFetchFromGitHub(this.state.path);\n\n    event.preventDefault();\n  };\n\n  onFetchFromGitHub = (path, cursor) => {\n    getIssuesOfRepository(path, cursor).then(queryResult =>\n      this.setState(resolveIssuesQuery(queryResult, cursor)),\n    );\n  };\n\n  onFetchMoreIssues = () => {\n    const {\n      endCursor,\n    } = this.state.organization.repository.issues.pageInfo;\n\n    this.onFetchFromGitHub(this.state.path, endCursor);\n  };\n\n  onStarRepository = (repositoryId, viewerHasStarred) => {\n    if (viewerHasStarred) {\n      removeStarFromRepository(repositoryId).then(mutationResult =>\n        this.setState(resolveRemoveStarMutation(mutationResult)),\n      );\n    } else {\n      addStarToRepository(repositoryId).then(mutationResult =>\n        this.setState(resolveAddStarMutation(mutationResult)),\n      );\n    }\n  };\n\n  render() {\n    const { path, organization, errors } = this.state;\n\n    return (\n      <div>\n        <h1>{TITLE}</h1>\n\n        <form onSubmit={this.onSubmit}>\n          <label htmlFor=\"url\">\n            Show open issues for https://github.com/\n          </label>\n          <input\n            id=\"url\"\n            type=\"text\"\n            value={path}\n            onChange={this.onChange}\n            style={{ width: '300px' }}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n\n        <hr />\n\n        {organization ? (\n          <Organization\n            organization={organization}\n            errors={errors}\n            onFetchMoreIssues={this.onFetchMoreIssues}\n            onStarRepository={this.onStarRepository}\n          />\n        ) : (\n          <p>No information yet ...</p>\n        )}\n      </div>\n    );\n  }\n}\n\nconst Organization = ({\n  organization,\n  errors,\n  onFetchMoreIssues,\n  onStarRepository,\n}) => {\n  if (errors) {\n    return (\n      <p>\n        <strong>Something went wrong:</strong>\n        {errors.map(error => error.message).join(' ')}\n      </p>\n    );\n  }\n\n  return (\n    <div>\n      <p>\n        <strong>Issues from Organization:</strong>\n        <a href={organization.url}>{organization.name}</a>\n      </p>\n      <Repository\n        repository={organization.repository}\n        onFetchMoreIssues={onFetchMoreIssues}\n        onStarRepository={onStarRepository}\n      />\n    </div>\n  );\n};\n\nconst Repository = ({\n  repository,\n  onFetchMoreIssues,\n  onStarRepository,\n}) => (\n  <div>\n    <p>\n      <strong>In Repository:</strong>\n      <a href={repository.url}>{repository.name}</a>\n    </p>\n\n    <button\n      type=\"button\"\n      onClick={() =>\n        onStarRepository(repository.id, repository.viewerHasStarred)\n      }\n    >\n      {repository.stargazers.totalCount}\n      {repository.viewerHasStarred ? ' Unstar' : ' Star'}\n    </button>\n\n    <ul>\n      {repository.issues.edges.map(issue => (\n        <li key={issue.node.id}>\n          <a href={issue.node.url}>{issue.node.title}</a>\n\n          <ul>\n            {issue.node.reactions.edges.map(reaction => (\n              <li key={reaction.node.id}>{reaction.node.content}</li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n\n    <hr />\n\n    {repository.issues.pageInfo.hasNextPage && (\n      <button onClick={onFetchMoreIssues}>More</button>\n    )}\n  </div>\n);\n\nexport default App;"]},"metadata":{},"sourceType":"module"}