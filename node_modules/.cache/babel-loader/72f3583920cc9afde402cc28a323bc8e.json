{"ast":null,"code":"var _jsxFileName = \"/Users/mcrawford/Code/react-with-graphql-vanilla/src/Components/gitRepository.js\";\nimport React from 'react';\n\nconst Organization = ({\n  organization,\n  errors,\n  onFetchMoreIssues,\n  onStarRepository\n}) => {\n  if (errors) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Something went wrong:\"), errors.map(error => error.message).join(' '));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Issues from Organization:\"), React.createElement(\"a\", {\n    href: organization.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, organization.name)), React.createElement(Repository, {\n    repository: organization.repository,\n    onFetchMoreIssues: onFetchMoreIssues,\n    onStarRepository: onStarRepository,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nconst Repository = ({\n  repository,\n  onFetchMoreIssues,\n  onStarRepository\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"In Repository:\"), React.createElement(\"a\", {\n  href: repository.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, repository.name)), React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => onStarRepository(repository.id, repository.viewerHasStarred),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, repository.stargazers.totalCount, repository.viewerHasStarred ? ' Unstar' : ' Star'), React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, repository.issues.edges.map(issue => React.createElement(\"li\", {\n  key: issue.node.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: issue.node.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, issue.node.title), React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, issue.node.reactions.edges.map(reaction => React.createElement(\"li\", {\n  key: reaction.node.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, reaction.node.content)))))), React.createElement(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}), repository.issues.pageInfo.hasNextPage && React.createElement(\"button\", {\n  onClick: onFetchMoreIssues,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, \"More\"));\n\nexport default Organization;","map":{"version":3,"sources":["/Users/mcrawford/Code/react-with-graphql-vanilla/src/Components/gitRepository.js"],"names":["React","Organization","organization","errors","onFetchMoreIssues","onStarRepository","map","error","message","join","url","name","repository","Repository","id","viewerHasStarred","stargazers","totalCount","issues","edges","issue","node","title","reactions","reaction","content","pageInfo","hasNextPage"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst Organization = ({\n  organization,\n  errors,\n  onFetchMoreIssues,\n  onStarRepository,\n}) => {\n  if (errors) {\n    return (\n      <p>\n        <strong>Something went wrong:</strong>\n        {errors.map(error => error.message).join(' ')}\n      </p>\n    );\n  }\n\n  return (\n    <div>\n      <p>\n        <strong>Issues from Organization:</strong>\n        <a href={organization.url}>{organization.name}</a>\n      </p>\n      <Repository\n        repository={organization.repository}\n        onFetchMoreIssues={onFetchMoreIssues}\n        onStarRepository={onStarRepository}\n      />\n    </div>\n  );\n};\n\nconst Repository = ({\n  repository,\n  onFetchMoreIssues,\n  onStarRepository,\n}) => (\n  <div>\n    <p>\n      <strong>In Repository:</strong>\n      <a href={repository.url}>{repository.name}</a>\n    </p>\n\n    <button\n      type=\"button\"\n      onClick={() =>\n        onStarRepository(repository.id, repository.viewerHasStarred)\n      }\n    >\n      {repository.stargazers.totalCount}\n      {repository.viewerHasStarred ? ' Unstar' : ' Star'}\n    </button>\n\n    <ul>\n      {repository.issues.edges.map(issue => (\n        <li key={issue.node.id}>\n          <a href={issue.node.url}>{issue.node.title}</a>\n\n          <ul>\n            {issue.node.reactions.edges.map(reaction => (\n              <li key={reaction.node.id}>{reaction.node.content}</li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n\n    <hr />\n\n    {repository.issues.pageInfo.hasNextPage && (\n      <button onClick={onFetchMoreIssues}>More</button>\n    )}\n  </div>\n);\n\nexport default Organization;"]},"metadata":{},"sourceType":"module"}