{"ast":null,"code":"var _jsxFileName = \"/Users/mcrawford/Code/react-with-graphql-vanilla/src/Components/Repository.js\";\nimport React from 'react';\n\nconst Repository = ({\n  repository,\n  onFetchMoreIssues,\n  onStarRepository\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, \"In Repository:\"), React.createElement(\"a\", {\n  href: repository.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, repository.name)), React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => onStarRepository(repository.id, repository.viewerHasStarred),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, repository.stargazers.totalCount, repository.viewerHasStarred ? ' Unstar' : ' Star'), React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, repository.issues.edges.map(issue => React.createElement(\"li\", {\n  key: issue.node.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: issue.node.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, issue.node.title), React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, issue.node.reactions.edges.map(reaction => React.createElement(\"li\", {\n  key: reaction.node.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, reaction.node.content)))))), React.createElement(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), repository.issues.pageInfo.hasNextPage && React.createElement(\"button\", {\n  onClick: onFetchMoreIssues,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, \"More\"));\n\nexport default Repository;","map":{"version":3,"sources":["/Users/mcrawford/Code/react-with-graphql-vanilla/src/Components/Repository.js"],"names":["React","Repository","repository","onFetchMoreIssues","onStarRepository","url","name","id","viewerHasStarred","stargazers","totalCount","issues","edges","map","issue","node","title","reactions","reaction","content","pageInfo","hasNextPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,UADkB;AAElBC,EAAAA,iBAFkB;AAGlBC,EAAAA;AAHkB,CAAD,KAKjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAG,EAAA,IAAI,EAAEF,UAAU,CAACG,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA0BH,UAAU,CAACI,IAArC,CAFF,CADF,EAME;AACE,EAAA,IAAI,EAAC,QADP;AAEE,EAAA,OAAO,EAAE,MACPF,gBAAgB,CAACF,UAAU,CAACK,EAAZ,EAAgBL,UAAU,CAACM,gBAA3B,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMGN,UAAU,CAACO,UAAX,CAAsBC,UANzB,EAOGR,UAAU,CAACM,gBAAX,GAA8B,SAA9B,GAA0C,OAP7C,CANF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGN,UAAU,CAACS,MAAX,CAAkBC,KAAlB,CAAwBC,GAAxB,CAA4BC,KAAK,IAChC;AAAI,EAAA,GAAG,EAAEA,KAAK,CAACC,IAAN,CAAWR,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,IAAI,EAAEO,KAAK,CAACC,IAAN,CAAWV,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA0BS,KAAK,CAACC,IAAN,CAAWC,KAArC,CADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,KAAK,CAACC,IAAN,CAAWE,SAAX,CAAqBL,KAArB,CAA2BC,GAA3B,CAA+BK,QAAQ,IACtC;AAAI,EAAA,GAAG,EAAEA,QAAQ,CAACH,IAAT,CAAcR,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA4BW,QAAQ,CAACH,IAAT,CAAcI,OAA1C,CADD,CADH,CAHF,CADD,CADH,CAhBF,EA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA9BF,EAgCGjB,UAAU,CAACS,MAAX,CAAkBS,QAAlB,CAA2BC,WAA3B,IACC;AAAQ,EAAA,OAAO,EAAElB,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAjCJ,CALF;;AA2CA,eAAeF,UAAf","sourcesContent":["import React from 'react';\n\nconst Repository = ({\n  repository,\n  onFetchMoreIssues,\n  onStarRepository,\n}) => (\n  <div>\n    <p>\n      <strong>In Repository:</strong>\n      <a href={repository.url}>{repository.name}</a>\n    </p>\n\n    <button\n      type=\"button\"\n      onClick={() =>\n        onStarRepository(repository.id, repository.viewerHasStarred)\n      }\n    >\n      {repository.stargazers.totalCount}\n      {repository.viewerHasStarred ? ' Unstar' : ' Star'}\n    </button>\n\n    <ul>\n      {repository.issues.edges.map(issue => (\n        <li key={issue.node.id}>\n          <a href={issue.node.url}>{issue.node.title}</a>\n\n          <ul>\n            {issue.node.reactions.edges.map(reaction => (\n              <li key={reaction.node.id}>{reaction.node.content}</li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n\n    <hr />\n\n    {repository.issues.pageInfo.hasNextPage && (\n      <button onClick={onFetchMoreIssues}>More</button>\n    )}\n  </div>\n);\n\nexport default Repository;"]},"metadata":{},"sourceType":"module"}