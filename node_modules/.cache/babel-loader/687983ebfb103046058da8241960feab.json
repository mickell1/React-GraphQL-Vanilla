{"ast":null,"code":"import _objectSpread from \"/Users/mcrawford/Code/react-with-graphql-vanilla/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/mcrawford/Code/react-with-graphql-vanilla/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mcrawford/Code/react-with-graphql-vanilla/src/App.js\";\nimport React, { Component } from 'react';\nimport axiosGitHubGraphQL from './Api/POST/resposIssues';\nimport GET_ISSUES_OF_REPOSITORY from './Helpers/Organization';\nimport { addStarToRepository, resolveAddStarMutation, removeStarFromRepository, resolveRemoveStarMutation } from './Functions/gitStartHandlers';\nconst TITLE = 'React GraphQL GitHub Client';\n\nconst getIssuesOfRepository = (path, cursor) => {\n  const _path$split = path.split('/'),\n        _path$split2 = _slicedToArray(_path$split, 2),\n        organization = _path$split2[0],\n        repository = _path$split2[1];\n\n  return axiosGitHubGraphQL.post('', {\n    query: GET_ISSUES_OF_REPOSITORY,\n    variables: {\n      organization,\n      repository,\n      cursor\n    }\n  });\n};\n\nconst resolveIssuesQuery = (queryResult, cursor) => state => {\n  const _queryResult$data = queryResult.data,\n        data = _queryResult$data.data,\n        errors = _queryResult$data.errors;\n\n  if (!cursor) {\n    return {\n      organization: data.organization,\n      errors\n    };\n  }\n\n  const oldIssues = state.organization.repository.issues.edges;\n  const newIssues = data.organization.repository.issues.edges;\n  const updatedIssues = [...oldIssues, ...newIssues];\n  return {\n    organization: _objectSpread({}, data.organization, {\n      repository: _objectSpread({}, data.organization.repository, {\n        issues: _objectSpread({}, data.organization.repository.issues, {\n          edges: updatedIssues\n        })\n      })\n    }),\n    errors\n  };\n}; // const addStarToRepository = repositoryId => {\n//   return axiosGitHubGraphQL.post('', {\n//     query: ADD_STAR,\n//     variables: { repositoryId },\n//   });\n// };\n// const resolveAddStarMutation = mutationResult => state => {\n//   const {\n//     viewerHasStarred,\n//   } = mutationResult.data.data.addStar.starrable;\n//   const { totalCount } = state.organization.repository.stargazers;\n//   return {\n//     ...state,\n//     organization: {\n//       ...state.organization,\n//       repository: {\n//         ...state.organization.repository,\n//         viewerHasStarred,\n//         stargazers: {\n//           totalCount: totalCount + 1,\n//         },\n//       },\n//     },\n//   };\n// };\n// const removeStarFromRepository = repositoryId => {\n//   return axiosGitHubGraphQL.post('', {\n//     query: REMOVE_STAR,\n//     variables: { repositoryId },\n//   });\n// };\n// const resolveRemoveStarMutation = mutationResult => state => {\n//   const {\n//     viewerHasStarred,\n//   } = mutationResult.data.data.removeStar.starrable;\n//   const { totalCount } = state.organization.repository.stargazers;\n//   return {\n//     ...state,\n//     organization: {\n//       ...state.organization,\n//       repository: {\n//         ...state.organization.repository,\n//         viewerHasStarred,\n//         stargazers: {\n//           totalCount: totalCount - 1,\n//         },\n//       },\n//     },\n//   };\n// };\n\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      path: 'the-road-to-learn-react/the-road-to-learn-react',\n      organization: null,\n      errors: null\n    };\n\n    this.onChange = event => {\n      this.setState({\n        path: event.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      this.onFetchFromGitHub(this.state.path);\n      event.preventDefault();\n    };\n\n    this.onFetchFromGitHub = (path, cursor) => {\n      getIssuesOfRepository(path, cursor).then(queryResult => this.setState(resolveIssuesQuery(queryResult, cursor)));\n    };\n\n    this.onFetchMoreIssues = () => {\n      const endCursor = this.state.organization.repository.issues.pageInfo.endCursor;\n      this.onFetchFromGitHub(this.state.path, endCursor);\n    };\n\n    this.onStarRepository = (repositoryId, viewerHasStarred) => {\n      if (viewerHasStarred) {\n        removeStarFromRepository(repositoryId).then(mutationResult => this.setState(resolveRemoveStarMutation(mutationResult)));\n      } else {\n        addStarToRepository(repositoryId).then(mutationResult => this.setState(resolveAddStarMutation(mutationResult)));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.onFetchFromGitHub(this.state.path);\n  }\n\n  render() {\n    const _this$state = this.state,\n          path = _this$state.path,\n          organization = _this$state.organization,\n          errors = _this$state.errors;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, TITLE), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Show open issues for https://github.com/\"), React.createElement(\"input\", {\n      id: \"url\",\n      type: \"text\",\n      value: path,\n      onChange: this.onChange,\n      style: {\n        width: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), organization ? React.createElement(Organization, {\n      organization: organization,\n      errors: errors,\n      onFetchMoreIssues: this.onFetchMoreIssues,\n      onStarRepository: this.onStarRepository,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"No information yet ...\"));\n  }\n\n}\n\nconst Organization = ({\n  organization,\n  errors,\n  onFetchMoreIssues,\n  onStarRepository\n}) => {\n  if (errors) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Something went wrong:\"), errors.map(error => error.message).join(' '));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Issues from Organization:\"), React.createElement(\"a\", {\n    href: organization.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, organization.name)), React.createElement(Repository, {\n    repository: organization.repository,\n    onFetchMoreIssues: onFetchMoreIssues,\n    onStarRepository: onStarRepository,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }));\n};\n\nconst Repository = ({\n  repository,\n  onFetchMoreIssues,\n  onStarRepository\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 229\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 230\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 231\n  },\n  __self: this\n}, \"In Repository:\"), React.createElement(\"a\", {\n  href: repository.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 232\n  },\n  __self: this\n}, repository.name)), React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => onStarRepository(repository.id, repository.viewerHasStarred),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 235\n  },\n  __self: this\n}, repository.stargazers.totalCount, repository.viewerHasStarred ? ' Unstar' : ' Star'), React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 245\n  },\n  __self: this\n}, repository.issues.edges.map(issue => React.createElement(\"li\", {\n  key: issue.node.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 247\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: issue.node.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 248\n  },\n  __self: this\n}, issue.node.title), React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 250\n  },\n  __self: this\n}, issue.node.reactions.edges.map(reaction => React.createElement(\"li\", {\n  key: reaction.node.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 252\n  },\n  __self: this\n}, reaction.node.content)))))), React.createElement(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 259\n  },\n  __self: this\n}), repository.issues.pageInfo.hasNextPage && React.createElement(\"button\", {\n  onClick: onFetchMoreIssues,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 262\n  },\n  __self: this\n}, \"More\"));\n\nexport default App;","map":{"version":3,"sources":["/Users/mcrawford/Code/react-with-graphql-vanilla/src/App.js"],"names":["React","Component","axiosGitHubGraphQL","GET_ISSUES_OF_REPOSITORY","addStarToRepository","resolveAddStarMutation","removeStarFromRepository","resolveRemoveStarMutation","TITLE","getIssuesOfRepository","path","cursor","split","organization","repository","post","query","variables","resolveIssuesQuery","queryResult","state","data","errors","oldIssues","issues","edges","newIssues","updatedIssues","App","onChange","event","setState","target","value","onSubmit","onFetchFromGitHub","preventDefault","then","onFetchMoreIssues","endCursor","pageInfo","onStarRepository","repositoryId","viewerHasStarred","mutationResult","componentDidMount","render","width","Organization","map","error","message","join","url","name","Repository","id","stargazers","totalCount","issue","node","title","reactions","reaction","content","hasNextPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axiosGitHubGraphQL from './Api/POST/resposIssues';\nimport GET_ISSUES_OF_REPOSITORY from './Helpers/Organization';\nimport { \n  addStarToRepository, \n  resolveAddStarMutation, \n  removeStarFromRepository, \n  resolveRemoveStarMutation,\n} from './Functions/gitStartHandlers';\n\nconst TITLE = 'React GraphQL GitHub Client';\n\nconst getIssuesOfRepository = (path, cursor) => {\n  const [organization, repository] = path.split('/');\n\n  return axiosGitHubGraphQL.post('', {\n    query: GET_ISSUES_OF_REPOSITORY,\n    variables: { organization, repository, cursor },\n  });\n};\n\nconst resolveIssuesQuery = (queryResult, cursor) => state => {\n  const { data, errors } = queryResult.data;\n\n  if (!cursor) {\n    return {\n      organization: data.organization,\n      errors,\n    };\n  }\n\n  const { edges: oldIssues } = state.organization.repository.issues;\n  const { edges: newIssues } = data.organization.repository.issues;\n  const updatedIssues = [...oldIssues, ...newIssues];\n\n  return {\n    organization: {\n      ...data.organization,\n      repository: {\n        ...data.organization.repository,\n        issues: {\n          ...data.organization.repository.issues,\n          edges: updatedIssues,\n        },\n      },\n    },\n    errors,\n  };\n};\n\n// const addStarToRepository = repositoryId => {\n//   return axiosGitHubGraphQL.post('', {\n//     query: ADD_STAR,\n//     variables: { repositoryId },\n//   });\n// };\n\n// const resolveAddStarMutation = mutationResult => state => {\n//   const {\n//     viewerHasStarred,\n//   } = mutationResult.data.data.addStar.starrable;\n\n//   const { totalCount } = state.organization.repository.stargazers;\n\n//   return {\n//     ...state,\n//     organization: {\n//       ...state.organization,\n//       repository: {\n//         ...state.organization.repository,\n//         viewerHasStarred,\n//         stargazers: {\n//           totalCount: totalCount + 1,\n//         },\n//       },\n//     },\n//   };\n// };\n\n// const removeStarFromRepository = repositoryId => {\n//   return axiosGitHubGraphQL.post('', {\n//     query: REMOVE_STAR,\n//     variables: { repositoryId },\n//   });\n// };\n\n// const resolveRemoveStarMutation = mutationResult => state => {\n//   const {\n//     viewerHasStarred,\n//   } = mutationResult.data.data.removeStar.starrable;\n\n//   const { totalCount } = state.organization.repository.stargazers;\n\n//   return {\n//     ...state,\n//     organization: {\n//       ...state.organization,\n//       repository: {\n//         ...state.organization.repository,\n//         viewerHasStarred,\n//         stargazers: {\n//           totalCount: totalCount - 1,\n//         },\n//       },\n//     },\n//   };\n// };\n\nclass App extends Component {\n  state = {\n    path: 'the-road-to-learn-react/the-road-to-learn-react',\n    organization: null,\n    errors: null,\n  };\n\n  componentDidMount() {\n    this.onFetchFromGitHub(this.state.path);\n  }\n\n  onChange = event => {\n    this.setState({ path: event.target.value });\n  };\n\n  onSubmit = event => {\n    this.onFetchFromGitHub(this.state.path);\n\n    event.preventDefault();\n  };\n\n  onFetchFromGitHub = (path, cursor) => {\n    getIssuesOfRepository(path, cursor).then(queryResult =>\n      this.setState(resolveIssuesQuery(queryResult, cursor)),\n    );\n  };\n\n  onFetchMoreIssues = () => {\n    const {\n      endCursor,\n    } = this.state.organization.repository.issues.pageInfo;\n\n    this.onFetchFromGitHub(this.state.path, endCursor);\n  };\n\n  onStarRepository = (repositoryId, viewerHasStarred) => {\n    if (viewerHasStarred) {\n      removeStarFromRepository(repositoryId).then(mutationResult =>\n        this.setState(resolveRemoveStarMutation(mutationResult)),\n      );\n    } else {\n      addStarToRepository(repositoryId).then(mutationResult =>\n        this.setState(resolveAddStarMutation(mutationResult)),\n      );\n    }\n  };\n\n  render() {\n    const { path, organization, errors } = this.state;\n\n    return (\n      <div>\n        <h1>{TITLE}</h1>\n\n        <form onSubmit={this.onSubmit}>\n          <label htmlFor=\"url\">\n            Show open issues for https://github.com/\n          </label>\n          <input\n            id=\"url\"\n            type=\"text\"\n            value={path}\n            onChange={this.onChange}\n            style={{ width: '300px' }}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n\n        <hr />\n\n        {organization ? (\n          <Organization\n            organization={organization}\n            errors={errors}\n            onFetchMoreIssues={this.onFetchMoreIssues}\n            onStarRepository={this.onStarRepository}\n          />\n        ) : (\n          <p>No information yet ...</p>\n        )}\n      </div>\n    );\n  }\n}\n\nconst Organization = ({\n  organization,\n  errors,\n  onFetchMoreIssues,\n  onStarRepository,\n}) => {\n  if (errors) {\n    return (\n      <p>\n        <strong>Something went wrong:</strong>\n        {errors.map(error => error.message).join(' ')}\n      </p>\n    );\n  }\n\n  return (\n    <div>\n      <p>\n        <strong>Issues from Organization:</strong>\n        <a href={organization.url}>{organization.name}</a>\n      </p>\n      <Repository\n        repository={organization.repository}\n        onFetchMoreIssues={onFetchMoreIssues}\n        onStarRepository={onStarRepository}\n      />\n    </div>\n  );\n};\n\nconst Repository = ({\n  repository,\n  onFetchMoreIssues,\n  onStarRepository,\n}) => (\n  <div>\n    <p>\n      <strong>In Repository:</strong>\n      <a href={repository.url}>{repository.name}</a>\n    </p>\n\n    <button\n      type=\"button\"\n      onClick={() =>\n        onStarRepository(repository.id, repository.viewerHasStarred)\n      }\n    >\n      {repository.stargazers.totalCount}\n      {repository.viewerHasStarred ? ' Unstar' : ' Star'}\n    </button>\n\n    <ul>\n      {repository.issues.edges.map(issue => (\n        <li key={issue.node.id}>\n          <a href={issue.node.url}>{issue.node.title}</a>\n\n          <ul>\n            {issue.node.reactions.edges.map(reaction => (\n              <li key={reaction.node.id}>{reaction.node.content}</li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n\n    <hr />\n\n    {repository.issues.pageInfo.hasNextPage && (\n      <button onClick={onFetchMoreIssues}>More</button>\n    )}\n  </div>\n);\n\nexport default App;"]},"metadata":{},"sourceType":"module"}