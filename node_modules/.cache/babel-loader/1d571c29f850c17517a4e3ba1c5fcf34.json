{"ast":null,"code":"export default GET_ISSUES_OF_REPOSITORY = \"\\n  query ($organization: String!, $repository: String!, $cursor: String) {\\n    organization(login: $organization) {\\n      name\\n      url\\n      repository(name: $repository) {\\n        id\\n        name\\n        url\\n        stargazers {\\n          totalCount\\n        }\\n        viewerHasStarred\\n        issues(first: 5, after: $cursor, states: [OPEN]) {\\n          edges {\\n            node {\\n              id\\n              title\\n              url\\n              reactions(last: 3) {\\n                edges {\\n                  node {\\n                    id\\n                    content\\n                  }\\n                }\\n              }\\n            }\\n          }\\n          totalCount\\n          pageInfo {\\n            endCursor\\n            hasNextPage\\n          }\\n        }\\n      }\\n    }\\n  }\\n\";","map":{"version":3,"sources":["/Users/mcrawford/Code/react-with-graphql-vanilla/src/Helpers/Organization.js"],"names":["GET_ISSUES_OF_REPOSITORY"],"mappings":"AAAA,eAAeA,wBAAwB,yzBAAvC","sourcesContent":["export default GET_ISSUES_OF_REPOSITORY = `\n  query ($organization: String!, $repository: String!, $cursor: String) {\n    organization(login: $organization) {\n      name\n      url\n      repository(name: $repository) {\n        id\n        name\n        url\n        stargazers {\n          totalCount\n        }\n        viewerHasStarred\n        issues(first: 5, after: $cursor, states: [OPEN]) {\n          edges {\n            node {\n              id\n              title\n              url\n              reactions(last: 3) {\n                edges {\n                  node {\n                    id\n                    content\n                  }\n                }\n              }\n            }\n          }\n          totalCount\n          pageInfo {\n            endCursor\n            hasNextPage\n          }\n        }\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}