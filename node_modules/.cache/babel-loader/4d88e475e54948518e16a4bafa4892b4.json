{"ast":null,"code":"var _jsxFileName = \"/Users/mcrawford/Code/react-with-graphql-vanilla/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst axiosGitHubGraphQL = axios.create({\n  baseURL: 'https://api.github.com/graphql',\n  headers: {\n    Authorization: \"bearer \".concat(process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN)\n  }\n});\nconst TITLE = 'React GraphQL GitHub Client';\nconst GET_REPOSITORY_OF_ORGANIZATION = \"\\n  {\\n    organization(login: \\\"the-road-to-learn-react\\\") {\\n      name\\n      url\\n      repository(name: \\\"the-road-to-learn-react\\\") {\\n        name\\n        url\\n        issues(last: 5) {\\n          edges {\\n            node {\\n              id\\n              title\\n              url\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      path: 'the-road-to-learn-react/the-road-to-learn-react',\n      organization: null,\n      errors: null\n    };\n\n    this.onChange = event => {\n      this.setState({\n        path: event.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      // fetch data\n      event.preventDefault();\n    };\n\n    this.onFetchFromGitHub = () => {\n      axiosGitHubGraphQL.post('', {\n        query: GET_REPOSITORY_OF_ORGANIZATION\n      }).then(result => this.setState(() => ({\n        organization: result.data.data.organization,\n        errors: result.data.errors\n      })));\n    };\n  }\n\n  componentDidMount() {\n    this.onFetchFromGitHub();\n  }\n\n  render() {\n    const _this$state = this.state,\n          path = _this$state.path,\n          organization = _this$state.organization,\n          errors = _this$state.errors;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, TITLE), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Show open issues for https://github.com/\"), React.createElement(\"input\", {\n      id: \"url\",\n      type: \"text\",\n      value: path,\n      onChange: this.onChange,\n      style: {\n        width: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), organization ? React.createElement(Organization, {\n      organization: organization,\n      errors: errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"No information yet ...\"));\n  }\n\n}\n\nconst Organization = ({\n  organization,\n  errors\n}) => {\n  if (errors) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Something went wrong:\"), errors.map(error => error.message).join(' '));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Issues from Organization:\"), React.createElement(\"a\", {\n    href: organization.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, organization.name)), React.createElement(Repository, {\n    repository: organization.repository,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }));\n};\n\nconst Repository = ({\n  repository\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125\n  },\n  __self: this\n}, \"In Repository:\"), React.createElement(\"a\", {\n  href: repository.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126\n  },\n  __self: this\n}, repository.name)));\n\nexport default App;","map":{"version":3,"sources":["/Users/mcrawford/Code/react-with-graphql-vanilla/src/App.js"],"names":["React","Component","axios","axiosGitHubGraphQL","create","baseURL","headers","Authorization","process","env","REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN","TITLE","GET_REPOSITORY_OF_ORGANIZATION","App","state","path","organization","errors","onChange","event","setState","target","value","onSubmit","preventDefault","onFetchFromGitHub","post","query","then","result","data","componentDidMount","render","width","Organization","map","error","message","join","url","name","repository","Repository"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAGD,KAAK,CAACE,MAAN,CAAa;AACtCC,EAAAA,OAAO,EAAE,gCAD6B;AAEtCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,mBACXC,OAAO,CAACC,GAAR,CAAYC,sCADD;AADN;AAF6B,CAAb,CAA3B;AASA,MAAMC,KAAK,GAAG,6BAAd;AAEA,MAAMC,8BAA8B,qWAApC;;AAsBA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1Ba,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,iDADA;AAENC,MAAAA,YAAY,EAAE,IAFR;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADkB;;AAAA,SAW1BC,QAX0B,GAWfC,KAAK,IAAI;AAClB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAArB,OAAd;AACD,KAbyB;;AAAA,SAe1BC,QAf0B,GAefJ,KAAK,IAAI;AAClB;AAEAA,MAAAA,KAAK,CAACK,cAAN;AACD,KAnByB;;AAAA,SAqB1BC,iBArB0B,GAqBN,MAAM;AACxBtB,MAAAA,kBAAkB,CACfuB,IADH,CACQ,EADR,EACY;AAAEC,QAAAA,KAAK,EAAEf;AAAT,OADZ,EAEGgB,IAFH,CAEQC,MAAM,IACV,KAAKT,QAAL,CAAc,OAAO;AACnBJ,QAAAA,YAAY,EAAEa,MAAM,CAACC,IAAP,CAAYA,IAAZ,CAAiBd,YADZ;AAEnBC,QAAAA,MAAM,EAAEY,MAAM,CAACC,IAAP,CAAYb;AAFD,OAAP,CAAd,CAHJ;AAQD,KA9ByB;AAAA;;AAO1Bc,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,iBAAL;AACD;;AAuBDO,EAAAA,MAAM,GAAG;AAAA,wBACgC,KAAKlB,KADrC;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,YADP,eACOA,YADP;AAAA,UACqBC,MADrB,eACqBA,MADrB;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,KAAL,CADF,EAGE;AAAM,MAAA,QAAQ,EAAE,KAAKY,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,EAIE;AACE,MAAA,EAAE,EAAC,KADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAER,IAHT;AAIE,MAAA,QAAQ,EAAE,KAAKG,QAJjB;AAKE,MAAA,KAAK,EAAE;AAAEe,QAAAA,KAAK,EAAE;AAAT,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAWE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CAHF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EAmBIjB,YAAY,GACZ,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAEA,YAA5B;AAA0C,MAAA,MAAM,EAAEC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY,GAGZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAtBJ,CADF;AA2BD;;AA7DyB;;AAgE5B,MAAMiB,YAAY,GAAG,CAAC;AAAElB,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA8B;AACjD,MAAIA,MAAJ,EAAY;AACV,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEGA,MAAM,CAACkB,GAAP,CAAWC,KAAK,IAAIA,KAAK,CAACC,OAA1B,EAAmCC,IAAnC,CAAwC,GAAxC,CAFH,CADF;AAMD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAG,IAAA,IAAI,EAAEtB,YAAY,CAACuB,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BvB,YAAY,CAACwB,IAAzC,CAFF,CADF,EAKE,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAExB,YAAY,CAACyB,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAnBD;;AAqBA,MAAMC,UAAU,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAG,EAAA,IAAI,EAAEA,UAAU,CAACF,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA0BE,UAAU,CAACD,IAArC,CAFF,CADF,CADF;;AASA,eAAe3B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst axiosGitHubGraphQL = axios.create({\n  baseURL: 'https://api.github.com/graphql',\n  headers: {\n    Authorization: `bearer ${\n      process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN\n    }`,\n  },\n});\n\nconst TITLE = 'React GraphQL GitHub Client';\n\nconst GET_REPOSITORY_OF_ORGANIZATION =`\n  {\n    organization(login: \"the-road-to-learn-react\") {\n      name\n      url\n      repository(name: \"the-road-to-learn-react\") {\n        name\n        url\n        issues(last: 5) {\n          edges {\n            node {\n              id\n              title\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass App extends Component {\n  state = {\n    path: 'the-road-to-learn-react/the-road-to-learn-react',\n    organization: null,\n    errors: null,\n  };\n\n  componentDidMount() {\n    this.onFetchFromGitHub();\n  }\n\n  onChange = event => {\n    this.setState({ path: event.target.value });\n  };\n\n  onSubmit = event => {\n    // fetch data\n\n    event.preventDefault();\n  };\n\n  onFetchFromGitHub = () => {\n    axiosGitHubGraphQL\n      .post('', { query: GET_REPOSITORY_OF_ORGANIZATION })\n      .then(result => \n        this.setState(() => ({\n          organization: result.data.data.organization,\n          errors: result.data.errors,\n        })),\n      );\n  };\n\n  render() {\n    const { path, organization, errors } = this.state;\n    return (\n      <div>\n        <h1>{TITLE}</h1>\n\n        <form onSubmit={this.onSubmit}>\n          <label htmlFor=\"url\">\n            Show open issues for https://github.com/\n          </label>\n          <input\n            id=\"url\"\n            type=\"text\"\n            value={path}\n            onChange={this.onChange}\n            style={{ width: '300px' }}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n\n        <hr />\n        {\n          organization ? (\n          <Organization organization={organization} errors={errors} />\n          ) : (\n          <p>No information yet ...</p>\n        )}\n      </div>\n    );\n  }\n}\n\nconst Organization = ({ organization, errors }) => {\n  if (errors) {\n    return (\n      <p>\n        <strong>Something went wrong:</strong>\n        {errors.map(error => error.message).join(' ')}\n      </p>\n    );\n  }\n\n  return (\n    <div>\n      <p>\n        <strong>Issues from Organization:</strong>\n        <a href={organization.url}>{organization.name}</a>\n      </p>\n      <Repository repository={organization.repository} />\n    </div>\n  );\n};\n\nconst Repository = ({ repository }) => (\n  <div>\n    <p>\n      <strong>In Repository:</strong>\n      <a href={repository.url}>{repository.name}</a>\n    </p>\n  </div>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}