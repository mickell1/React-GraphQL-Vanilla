{"ast":null,"code":"import _objectSpread from \"/Users/mcrawford/Code/react-with-graphql-vanilla/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axiosGitHubGraphQL from '../Api/POST/resposIssues';\nimport { ADD_STAR, REMOVE_STAR } from './Helpers/gitstar';\n\nconst addStarToRepository = repositoryId => {\n  return axiosGitHubGraphQL.post('', {\n    query: ADD_STAR,\n    variables: {\n      repositoryId\n    }\n  });\n};\n\nconst resolveAddStarMutation = mutationResult => state => {\n  const viewerHasStarred = mutationResult.data.data.addStar.starrable.viewerHasStarred;\n  const totalCount = state.organization.repository.stargazers.totalCount;\n  return _objectSpread({}, state, {\n    organization: _objectSpread({}, state.organization, {\n      repository: _objectSpread({}, state.organization.repository, {\n        viewerHasStarred,\n        stargazers: {\n          totalCount: totalCount + 1\n        }\n      })\n    })\n  });\n};\n\nconst removeStarFromRepository = repositoryId => {\n  return axiosGitHubGraphQL.post('', {\n    query: REMOVE_STAR,\n    variables: {\n      repositoryId\n    }\n  });\n};\n\nconst resolveRemoveStarMutation = mutationResult => state => {\n  const viewerHasStarred = mutationResult.data.data.removeStar.starrable.viewerHasStarred;\n  const totalCount = state.organization.repository.stargazers.totalCount;\n  return _objectSpread({}, state, {\n    organization: _objectSpread({}, state.organization, {\n      repository: _objectSpread({}, state.organization.repository, {\n        viewerHasStarred,\n        stargazers: {\n          totalCount: totalCount - 1\n        }\n      })\n    })\n  });\n};\n\nexport { addStarToRepository, resolveAddStarMutation, removeStarFromRepository, resolveRemoveStarMutation };","map":{"version":3,"sources":["/Users/mcrawford/Code/react-with-graphql-vanilla/src/Functions/gitStartHandlers.js"],"names":["axiosGitHubGraphQL","ADD_STAR","REMOVE_STAR","addStarToRepository","repositoryId","post","query","variables","resolveAddStarMutation","mutationResult","state","viewerHasStarred","data","addStar","starrable","totalCount","organization","repository","stargazers","removeStarFromRepository","resolveRemoveStarMutation","removeStar"],"mappings":";AAAA,OAAOA,kBAAP,MAA+B,0BAA/B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,mBAAtC;;AAEA,MAAMC,mBAAmB,GAAGC,YAAY,IAAI;AAC1C,SAAOJ,kBAAkB,CAACK,IAAnB,CAAwB,EAAxB,EAA4B;AACjCC,IAAAA,KAAK,EAAEL,QAD0B;AAEjCM,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF;AAFsB,GAA5B,CAAP;AAID,CALD;;AAOA,MAAMI,sBAAsB,GAAGC,cAAc,IAAIC,KAAK,IAAI;AAAA,QAEtDC,gBAFsD,GAGpDF,cAAc,CAACG,IAAf,CAAoBA,IAApB,CAAyBC,OAAzB,CAAiCC,SAHmB,CAEtDH,gBAFsD;AAAA,QAKhDI,UALgD,GAKjCL,KAAK,CAACM,YAAN,CAAmBC,UAAnB,CAA8BC,UALG,CAKhDH,UALgD;AAOxD,2BACKL,KADL;AAEEM,IAAAA,YAAY,oBACPN,KAAK,CAACM,YADC;AAEVC,MAAAA,UAAU,oBACLP,KAAK,CAACM,YAAN,CAAmBC,UADd;AAERN,QAAAA,gBAFQ;AAGRO,QAAAA,UAAU,EAAE;AACVH,UAAAA,UAAU,EAAEA,UAAU,GAAG;AADf;AAHJ;AAFA;AAFd;AAaD,CApBD;;AAsBA,MAAMI,wBAAwB,GAAGf,YAAY,IAAI;AAC/C,SAAOJ,kBAAkB,CAACK,IAAnB,CAAwB,EAAxB,EAA4B;AACjCC,IAAAA,KAAK,EAAEJ,WAD0B;AAEjCK,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF;AAFsB,GAA5B,CAAP;AAID,CALD;;AAOA,MAAMgB,yBAAyB,GAAGX,cAAc,IAAIC,KAAK,IAAI;AAAA,QAEzDC,gBAFyD,GAGvDF,cAAc,CAACG,IAAf,CAAoBA,IAApB,CAAyBS,UAAzB,CAAoCP,SAHmB,CAEzDH,gBAFyD;AAAA,QAKnDI,UALmD,GAKpCL,KAAK,CAACM,YAAN,CAAmBC,UAAnB,CAA8BC,UALM,CAKnDH,UALmD;AAO3D,2BACKL,KADL;AAEEM,IAAAA,YAAY,oBACPN,KAAK,CAACM,YADC;AAEVC,MAAAA,UAAU,oBACLP,KAAK,CAACM,YAAN,CAAmBC,UADd;AAERN,QAAAA,gBAFQ;AAGRO,QAAAA,UAAU,EAAE;AACVH,UAAAA,UAAU,EAAEA,UAAU,GAAG;AADf;AAHJ;AAFA;AAFd;AAaD,CApBD;;AAsBA,SACEZ,mBADF,EAEEK,sBAFF,EAGEW,wBAHF,EAIEC,yBAJF","sourcesContent":["import axiosGitHubGraphQL from '../Api/POST/resposIssues';\nimport { ADD_STAR, REMOVE_STAR } from './Helpers/gitstar';\n\nconst addStarToRepository = repositoryId => {\n  return axiosGitHubGraphQL.post('', {\n    query: ADD_STAR,\n    variables: { repositoryId },\n  });\n};\n\nconst resolveAddStarMutation = mutationResult => state => {\n  const {\n    viewerHasStarred,\n  } = mutationResult.data.data.addStar.starrable;\n\n  const { totalCount } = state.organization.repository.stargazers;\n\n  return {\n    ...state,\n    organization: {\n      ...state.organization,\n      repository: {\n        ...state.organization.repository,\n        viewerHasStarred,\n        stargazers: {\n          totalCount: totalCount + 1,\n        },\n      },\n    },\n  };\n};\n\nconst removeStarFromRepository = repositoryId => {\n  return axiosGitHubGraphQL.post('', {\n    query: REMOVE_STAR,\n    variables: { repositoryId },\n  });\n};\n\nconst resolveRemoveStarMutation = mutationResult => state => {\n  const {\n    viewerHasStarred,\n  } = mutationResult.data.data.removeStar.starrable;\n\n  const { totalCount } = state.organization.repository.stargazers;\n\n  return {\n    ...state,\n    organization: {\n      ...state.organization,\n      repository: {\n        ...state.organization.repository,\n        viewerHasStarred,\n        stargazers: {\n          totalCount: totalCount - 1,\n        },\n      },\n    },\n  };\n};\n\nexport {\n  addStarToRepository,\n  resolveAddStarMutation,\n  removeStarFromRepository,\n  resolveRemoveStarMutation,\n}\n\n"]},"metadata":{},"sourceType":"module"}